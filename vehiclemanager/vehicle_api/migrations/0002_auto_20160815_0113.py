# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-15 01:13
from __future__ import unicode_literals

from django.db import migrations

def create_manufacturers(apps, schema_editor):
    Manufacturer = apps.get_model("vehicle_api", "Manufacturer")
    manufacturer_list = ['Honda', 'Yamaha', 'BMW', 'Ducati', 'Fiat', 'Chevrolet']
    for name in manufacturer_list:
        manufacturer = Manufacturer(manufacturer_name=name)
        manufacturer.save()


def create_colors(apps, schema_editor):
    VehicleColor = apps.get_model("vehicle_api", "VehicleColor")
    color_list = [
            ('branco', 'Branco'),
            ('vermelho', 'Vermelho'),
            ('preto', 'Preto'),
            ('azul', 'Azul')
    ]
    for (slug, name) in color_list:
        color = VehicleColor(color_slug=slug, color_name=name)
        color.save()

def create_models(apps, schema_editor):
    VehicleModel = apps.get_model("vehicle_api", "VehicleModel")
    model_list = [
            'CG Titan', 'G650GS', 'F800GS', 'Teneré', 'Uno', 'Prisma'
    ]
    for model in model_list:
        model = VehicleModel(model_name=model)
        model.save()

def create_types(apps, schema_editor):
    VehicleType = apps.get_model("vehicle_api", "VehicleType")
    type_list = [
            ('moto', 'Moto'),
            ('car', 'Carro'),
    ]
    for (slug, name) in type_list:
        vtype = VehicleType(type_slug=slug, type_name=name)
        vtype.save()

def create_vehicles(apps, schema_editor):
    Vehicle = apps.get_model("vehicle_api", "Vehicle")
    vehicle_list = [
            {
                'manufacturer': 'Yamaha',
                'model': 'Teneré',
                'color': 'azul',
                'kms': 1500,
                'engine': 0.250,
                'type': 'moto'
            },
            {
                'manufacturer': 'BMW',
                'model': 'G650GS',
                'color': 'branco',
                'kms': 0,
                'engine': 0.650,
                'type': 'moto'
            },
            {
                'manufacturer': 'Honda',
                'model': 'CG Titan',
                'color': 'preto',
                'kms': 3000,
                'engine': 0.650,
                'type': 'moto'
            },
            {
                'manufacturer': 'BMW',
                'model': 'G650GS',
                'color': 'branco',
                'kms': 30000,
                'engine': 0.650,
                'type': 'moto'
            },
            {
                'manufacturer': 'Fiat',
                'model': 'Uno',
                'color': 'vermelho',
                'kms': 1000,
                'engine': 1.0,
                'type': 'car'
            },
            {
                'manufacturer': 'Chevrolet',
                'model': 'Prisma',
                'color': 'vermelho',
                'kms': 0,
                'engine': 1.6,
                'type': 'car'
            },
    ]
    for vehicle in vehicle_list:
        Manufacturer = apps.get_model("vehicle_api", "Manufacturer")
        VehicleColor = apps.get_model("vehicle_api", "VehicleColor")
        VehicleModel = apps.get_model("vehicle_api", "VehicleModel")
        VehicleType = apps.get_model("vehicle_api", "VehicleType")
        manufacturer = Manufacturer.objects.get(manufacturer_name=vehicle['manufacturer'])
        model = VehicleModel.objects.get(model_name=vehicle['model'])
        color = VehicleColor.objects.get(color_slug=vehicle['color'])
        vtype = VehicleType.objects.get(type_slug=vehicle['type'])
        v = Vehicle(manufacturer=manufacturer,
                model=model,
                color=color,
                kms=vehicle['kms'],
                engine=vehicle['engine'],
                vehicle_type=vtype
            )
        v.save()

class Migration(migrations.Migration):

    dependencies = [
        ('vehicle_api', '0001_initial'),
    ]

    operations = [
            migrations.RunPython(create_manufacturers),
            migrations.RunPython(create_colors),
            migrations.RunPython(create_models),
            migrations.RunPython(create_types),
            migrations.RunPython(create_vehicles),
    ]
